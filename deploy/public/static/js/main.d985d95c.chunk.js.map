{"version":3,"sources":["components/buttons/ViewModeButtons.tsx","components/buttons/EditModeButtons.tsx","components/todo/TodoItem.tsx","components/todo/Todos.tsx","components/todo/AddTodo.tsx","components/pages/About.tsx","components/Header.tsx","components/todo/Searchbar.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["ViewModeButtons","props","id","todo","type","className","onClick","enterEditMode","bind","deleteTodo","EditModeButtons","saveChanges","exitEditMode","TodoItem","getStyle","textDecoration","completed","html","buttons","this","title","isEditing","name","onChange","onTodoInputChange","value","data-id","toggleTodoCompleted","checked","htmlFor","style","Component","Todos","todos","map","AddTodo","state","event","setState","target","onSubmit","preventDefault","addTodo","autoComplete","placeholder","About","Fragment","Header","to","Searchbar","search","App","API_URL","todosBackup","getTodos","axios","get","then","response","data","delete","filter","post","setComponentState","backup","JSON","stringify","parse","Number","dataset","payload","find","put","term","length","trim","includes","callback","exact","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d985d95c.chunk.js","sourcesContent":["import { ViewModeButtonProps } from \"./view-mode-buttons.interface\";\r\n\r\nconst ViewModeButtons = (props: ViewModeButtonProps) => {\r\n    const { id } = props.todo;\r\n\r\n    return (\r\n      <span>\r\n        <button type=\"button\" className=\"btn btn-outline-info btn-sm me-2\" onClick={props.enterEditMode.bind(this, id)}>  <i className=\"far fa-edit\"></i></button>\r\n        <button type=\"button\" className=\"btn btn-outline-danger btn-sm\" onClick={props.deleteTodo.bind(this, id)}> <i className=\"fas fa-times\"></i> </button>\r\n      </span>\r\n    )\r\n}\r\n\r\nexport default ViewModeButtons;","import { EditModeButtonProps } from \"./edit-mode-buttons.interface\";\r\n\r\nconst EditModeButtons = (props: EditModeButtonProps) => {\r\n    const { id } = props.todo;\r\n  \r\n    return (\r\n      <span>\r\n        <button type=\"button\" className=\"btn btn-outline-success btn-sm me-2\" onClick={props.saveChanges.bind(this, id)}> <i className=\"fas fa-check\"></i></button>\r\n        <button type=\"button\" className=\"btn btn-outline-info btn-sm me-2\" onClick={props.exitEditMode.bind(this, id)}> <i className=\"far fa-times-circle\"></i></button>\r\n      </span>\r\n    )\r\n}\r\n\r\nexport default EditModeButtons;","import React, { Component } from \"react\";\r\nimport ViewModeButtons from \"../buttons/ViewModeButtons\";\r\nimport EditModeButtons from \"../buttons/EditModeButtons\";\r\nimport { TodoItemProps } from \"./todos.interface\";\r\n\r\nexport default class TodoItem extends Component<TodoItemProps, {}> {\r\n  getStyle = () => {\r\n    return {\r\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\",\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { title, id, isEditing } = this.props.todo;\r\n    let html;\r\n    let buttons;\r\n\r\n    if (isEditing) {\r\n      buttons = (\r\n        <EditModeButtons\r\n          exitEditMode={this.props.exitEditMode}\r\n          saveChanges={this.props.saveChanges}\r\n          todo={this.props.todo}\r\n        />\r\n      );\r\n      html = (\r\n        <div className=\"w-75 d-inline-block\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            className=\"form-control\"\r\n            onChange={this.props.onTodoInputChange}\r\n            value={title}\r\n            data-id={id}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      buttons = (\r\n        <ViewModeButtons\r\n          enterEditMode={this.props.enterEditMode}\r\n          deleteTodo={this.props.deleteTodo}\r\n          todo={this.props.todo}\r\n        />\r\n      );\r\n      html = (\r\n        <div className=\"form-check form-check-inline\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            id={\"inlineCheckbox1_\" + id}\r\n            onChange={this.props.toggleTodoCompleted.bind(this, id)}\r\n            checked={this.props.todo.completed}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor={\"inlineCheckbox1_\" + id}>\r\n            {\" \"}\r\n            <span style={this.getStyle()}>{title}</span>{\" \"}\r\n          </label>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <li className=\"list-group-item\">\r\n        {html}\r\n\r\n        <div className=\"float-end\">{buttons}</div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport { TodoItemState, TodoProps } from \"./todos.interface\";\r\n\r\nexport default class Todos extends Component<TodoProps, {}> {\r\n  render() {\r\n    return (\r\n      <div className=\"todo-list\">\r\n        <ul className=\"list-group\">\r\n          {this.props.todos.map((todo: TodoItemState) => (\r\n            <TodoItem\r\n              key={todo.id}\r\n              todo={todo}\r\n              toggleTodoCompleted={this.props.toggleTodoCompleted}\r\n              deleteTodo={this.props.deleteTodo}\r\n              enterEditMode={this.props.enterEditMode}\r\n              exitEditMode={this.props.exitEditMode}\r\n              saveChanges={this.props.saveChanges}\r\n              onTodoInputChange={this.props.onTodoInputChange}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { AddTodoProps, AddTodoState } from \"./todos.interface\";\r\n\r\nexport default class AddTodo extends Component<AddTodoProps, AddTodoState> {\r\n  state: AddTodoState = {\r\n    title: \"\",\r\n  };\r\n\r\n  onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onSubmit = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    this.props.addTodo(this.state.title);\r\n    this.setState({ title: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.onSubmit}\r\n        className=\"row\"\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"col-md-10\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add todo...\"\r\n            name=\"title\"\r\n            className=\"form-control input-add-todo\"\r\n            value={this.state.title}\r\n            onChange={this.onChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-md-2 ps-0\">\r\n          <button type=\"submit\" className=\"submit-btn btn btn-outline-success\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n/*AddTodo.propTypes = {\r\n  addTodo: PropTypes.func.isRequired,\r\n};*/\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <React.Fragment>\r\n        <h1>About</h1>\r\n        <p>This is about page</p>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          My todos\r\n        </Link>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-md-0\">\r\n            <li className=\"nav-item active\">\r\n              <Link to=\"/\" className=\"nav-link active\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { SearchbarProps } from \"./todos.interface\";\r\n\r\nexport class Searchbar extends Component<SearchbarProps, {}> {\r\n  onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.props.search(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"row\" autoComplete=\"off\">\r\n        <div className=\"col-md-12\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            className=\"form-control input-add-todo\"\r\n            onChange={this.onChange}\r\n          />\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import \"./App.scss\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Todos from \"./components/todo/Todos\";\nimport AddTodo from \"./components/todo/AddTodo\";\nimport About from \"./components/pages/About\";\nimport Header from \"./components/Header\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  TodoItemsState,\n  TodoItemState,\n} from \"./components/todo/todos.interface\";\nimport Searchbar from \"./components/todo/Searchbar\";\n\nexport default class App extends Component<{}, TodoItemsState> {\n  readonly API_URL = \"/todos\";\n  todosBackup: TodoItemState[] = [];\n\n  state: TodoItemsState = {\n    todos: [],\n  };\n\n  componentDidMount() {\n    this.getTodos();\n  }\n\n  getTodos = () => {\n    axios\n      .get(this.API_URL)\n      .then((response) => this.setState({ todos: response.data }));\n  };\n\n  deleteTodo = (id: number) => {\n    axios.delete(`${this.API_URL}/${id}`).then(() => {\n      this.setState({\n        todos: [...this.state.todos.filter((todo) => todo.id !== id)],\n      });\n    });\n  };\n\n  addTodo = (title: string) => {\n    axios\n      .post(`${this.API_URL}`, { title, completed: false })\n      .then((response) =>\n        this.setState({ todos: [...this.state.todos, response.data] })\n      );\n  };\n\n  setComponentState(id: number, callback: (todo: TodoItemState) => void) {\n    this.setState((state) => {\n      return {\n        todos: state.todos.map((todo: TodoItemState) => {\n          if (todo.id === id) {\n            callback(todo);\n          }\n\n          return { ...todo, ...todo };\n        }),\n      };\n    });\n  }\n\n  toggleTodoCompleted = (id: number) => {\n    this.setComponentState(id, (todo: TodoItemState) => {\n      todo.completed = !todo.completed;\n    });\n  };\n\n  enterEditMode = (id: number) => {\n    this.setComponentState(id, (todo: TodoItemState) => {\n      todo.isEditing = true;\n      todo.backup = JSON.stringify(todo);\n    });\n  };\n\n  exitEditMode = (id: number) => {\n    this.setComponentState(id, (todo: TodoItemState) => {\n      const backup = JSON.parse(todo.backup);\n\n      todo.isEditing = false;\n      todo.title = backup.title;\n    });\n  };\n\n  onTodoInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const id = Number(event.target.dataset.id);\n\n    this.setComponentState(id, (todo: TodoItemState) => {\n      todo.title = event.target.value;\n    });\n  };\n\n  saveChanges = (id: number) => {\n    const payload: TodoItemState = this.state.todos.find(\n      (todo) => todo.id === id\n    ) as TodoItemState;\n\n    axios.put(`${this.API_URL}/${id}`, payload).then(() => {\n      this.setComponentState(id, (todo: TodoItemState) => {\n        todo.backup = null;\n        todo.isEditing = false;\n      });\n    });\n  };\n\n  search = (term: string) => {\n    if (!this.todosBackup.length) {\n      this.todosBackup = [...this.state.todos];\n    }\n\n    if (term.trim()) {\n      this.setState(() => {\n        return {\n          todos: this.todosBackup.filter((todo: TodoItemState) => {\n            return todo.title.includes(term.trim());\n          }),\n        };\n      });\n    } else {\n      this.setState({ todos: this.todosBackup });\n      this.todosBackup = [];\n    }\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <div className=\"App-header\">\n              <Header />\n            </div>\n\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <React.Fragment>\n                  <div className=\"row mb-2\">\n                    <div className=\"col-md-6\">\n                      <AddTodo addTodo={this.addTodo} />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <Searchbar search={this.search} />\n                    </div>\n                  </div>\n\n                  <Todos\n                    todos={this.state.todos}\n                    toggleTodoCompleted={this.toggleTodoCompleted}\n                    deleteTodo={this.deleteTodo}\n                    enterEditMode={this.enterEditMode}\n                    exitEditMode={this.exitEditMode}\n                    saveChanges={this.saveChanges}\n                    onTodoInputChange={this.onTodoInputChange}\n                  />\n                </React.Fragment>\n              )}\n            />\n\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}